-- Part I create tables

--
-- Table structure for table `Customers`
--
DROP TABLE IF EXISTS `Customers`;
CREATE TABLE `Customers` (
    `customerID` int NOT NULL AUTO_INCREMENT,
    `email` varchar(255) NOT NULL,
    `phone` varchar(255) NOT NULL,
    `address` varchar(255) NOT NULL,
    PRIMARY KEY (`customerID`)
   ) ENGINE=InnoDB;

--
-- Table structure for table `Customer Billings`
--
DROP TABLE IF EXISTS `Customer Billings`;
CREATE TABLE `Customer Billings` (
    `billNum` int NOT NULL AUTO_INCREMENT,
    `customerID` int NOT NULL, 
    `billDate` date NOT NULL,
    PRIMARY KEY (`billNum`),
    CONSTRAINT `customerIDFK` FOREIGN KEY (`customerID`) REFERENCES `Customers` (`customerID`) 
   ) ENGINE=InnoDB;

--
-- Table structure for table `Price Plans`
--
DROP TABLE IF EXISTS `Price Plans`;
CREATE TABLE `Price Plans`(
    `planID` int NOT NULL AUTO_INCREMENT,
    `billFreq` char NOT NULL, 
    `transType` varchar(255) NOT NULL,
    `transTypedSurcharge` float NOT NULL,
    PRIMARY KEY (`planID`)
   ) ENGINE=InnoDB;


--
-- Table structure for table  `Location Types`
--
DROP TABLE IF EXISTS `Location Types`;
CREATE TABLE `Location Types`(
    `locKey` int NOT NULL AUTO_INCREMENT,
    `planID` int NOT NULL, 
    `locType` varchar(255) NOT NULL,
    `locationPrice` float NOT NULL,
    PRIMARY KEY (`locKey`),
    CONSTRAINT `planIDFK` FOREIGN KEY (`planID`) REFERENCES `Price Plans` (`planID`) 
   ) ENGINE=InnoDB;


--
-- Table structure for table  `Plan Bill`
--
DROP TABLE IF EXISTS `Plan Bill`;
CREATE TABLE `Plan Bill`(
    `pbKey` int NOT NULL AUTO_INCREMENT,
    `planID` int NOT NULL, 
    `billNum` int NOT NULL,
    PRIMARY KEY (`pbKey`),
    CONSTRAINT `planFK` FOREIGN KEY (`planID`) REFERENCES `Price Plans` (`planID`), 
    CONSTRAINT `billNFK` FOREIGN KEY (`billNum`) REFERENCES  `Customer Billings` (`billNum`)
   ) ENGINE=InnoDB;

--
-- Table structure for table  `Location Bill`
--
DROP TABLE IF EXISTS `Location Bill`;
CREATE TABLE `Location Bill`(
    `lkKey` int NOT NULL AUTO_INCREMENT,
    `locKey` int NOT NULL, 
    `billNum` int NOT NULL,
    PRIMARY KEY (`lkKey`),
    CONSTRAINT `lockbIDFK` FOREIGN KEY (`locKey`) REFERENCES `Location Types` (`locKey`), 
    CONSTRAINT `billbNFK` FOREIGN KEY (`billNum`) REFERENCES  `Customer Billings` (`billNum`)
   ) ENGINE=InnoDB;
  
--
-- Table structure for table `Transactions`
--
 DROP TABLE IF EXISTS `Transactions`;
CREATE TABLE `Transactions`(
    `transNum` int NOT NULL AUTO_INCREMENT,
    `pbKey` int NOT NULL, 
    `lkKey` int NOT NULL, 
    `tranCount` int NOT NULL, 
    PRIMARY KEY (`transNum`)
 ) ENGINE=InnoDB;



-- Part II insert data

--
--  Dump data for  `Customers` 
--
INSERT INTO `Customers` (`email`,`phone`, `address`) 
VALUES ('widgetcorp@gmail.com', '555-123-4567', '20 Main St Corvalis OR'),
('bigcorp@yahoo.com', '555-345-0987', '34 Oak St NY NY'),
('valuecorp@gmail.com', '555-678-7654', '20 Bridge rd Corvalis OR');


--
--  Dump data for  `Customer Billings`
--
INSERT INTO `Customer Billings` (`customerID`, `billDate`) 
VALUES (1, '2020-4-1'), (1, '2020-5-1'), (1, '2020-6-1'), (1, '2020-7-1'), (1, '2020-8-1'), (1, '2020-9-1'), (1, '2020-10-1'), (1, '2020-11-1'), (1, '2020-12-1'),
(2, '2020-4-1'), (2, '2020-5-1'), (2, '2020-6-1'), (2, '2020-7-1'), (2, '2020-8-1'), (2, '2020-9-1'), (2, '2020-10-1'), (2, '2020-11-1'), (2, '2020-12-1'),
(3, '2020-4-1'), (3, '2020-5-1'), (3, '2020-6-1'), (3, '2020-7-1'), (3, '2020-8-1'), (3, '2020-9-1'), (3, '2020-10-1'), (3, '2020-11-1'), (3, '2020-12-1');

--
--  Dump data for  `Price Plans`
--
INSERT INTO `Price Plans`(`billFreq`, `transType`,`transTypedSurcharge`) VALUES
('w', 'Check', 20),('m', 'Check', 20),('b', 'Check', 20),('y', 'Check', 10),
('w', 'Credit', 30),('m', 'Credit', 30),('b', 'Credit', 30),('y', 'Credit', 20),
('w', 'EFT', 10),('m', 'EFT', 10),('b', 'EFT', 10),('y', 'EFT', 5);
--
--  Dump data for  `Location Types`
--
INSERT INTO `Location Types`(`planID`, `locType`,`locationPrice`) VALUES
(1, 'Mall', 100), (2, 'Website', 50), (3, 'Store', 75);

--
--  Dump data for   `Plan Bill`
--
INSERT INTO `Plan Bill`(`planID`, `billNum`) VALUES
(1,1),(1,2),(1,3),(1,4),(1,5),(3,6),(3,7),(3,8),(3,9),
(2,10),(2,11),(2,12),(2,13),(2,14),(2,15),(2,16),(2,17),(2,18),
(2,19),(2,20),(3,21),(3,22),(3,23),(3,24),(3,25),(3,26),(3,27);

--
--  Dump data for   `Location Bill`
--
INSERT INTO `Location Bill`(`locKey`, `billNum`) VALUES
(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),
(2,1),(2,2),(2,3),(2,4),(2,5),(2,6),(2,7),(2,8),(2,9),
(2,10),(2,11),(2,12),(2,13),(2,14),(2,15),(2,16),(2,17),(2,18),
(3,15),(3,16),(3,17),(3,18),
(3,19),(3,20),(3,21),(3,22),(3,23),(3,24),(3,25),(3,26),(3,27);


--
--  Dump data for   `Transactions`
--
INSERT INTO `Transactions`(`pbKey`, `lkKey`, `tranCount`) 

SELECT pb.`pbKey`, lb.`lkKey`, FLOOR(RAND()*(1000-0+1))+0 as transCount FROM `Location Bill` lb
  left join `Plan Bill` pb
  on lb.billNum = pb.billNum
  inner join (select * from `Customer Billings` where billDate < CURDATE()) cb
    on lb.billNum = cb.billNum and pb.billNum = cb.billNum;

INSERT INTO `Transactions`(`pbKey`, `lkKey`, `tranCount`) 
SELECT pb.`pbKey`,  lb.`lkKey`, 0 as transCount FROM `Location Bill` lb
  left join `Plan Bill` pb
  on lb.billNum = pb.billNum
  inner join (select * from `Customer Billings` where billDate >= CURDATE()) cb
    on lb.billNum = cb.billNum and pb.billNum = cb.billNum;
